{"version":3,"sources":["components/List.tsx","components/ContactList.tsx","components/Navbar.tsx","components/Section.tsx","components/Panel.tsx","components/Header.tsx","components/portfoilo/PortfolioData.tsx","components/Badge.tsx","components/portfoilo/Portfolio.tsx","components/skills/SkillsData.tsx","components/skills/Skills.tsx","components/experience/ExperienceData.tsx","components/experience/Experience.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","props","horizontal","children","className","ListItem","ContactItems","href","title","icon","faEnvelope","label","faLinkedin","faGithub","ContactList","showLabel","iconSize","labelSize","onDarkBG","colorStyle","map","item","user","Navbar","as","open","to","Pages","id","smooth","aria-current","current","undefined","Object","keys","key","filter","page","disabled","name","spy","onClick","Button","aria-hidden","faTimes","faBars","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","static","activeClass","src","alt","Section","fullScreen","sectionId","header","overrideWidth","Header","portfolioData","project","images","date","company","caption","badges","bullets","description","caseStudy","Badge","Portfolio","portfolioItem","badge","skills","faMicrosoft","faReact","faAngular","faJsSquare","faNodeJs","faMobileAlt","faCss3","faHtml5","faNpm","Skills","skillsData","skill","experienceData","projects","summary","Experience","experienceItem","bullet","HOME","ABOUT","PORTFOLIO","SKILLS","EDUCATION","EXPERIENCE","BLOG","FOOTER","App","offset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88db3372.chunk.js","sourcesContent":["import React from \"react\";\n\ntype ListProps = {\n  horizontal?: boolean;\n  children: React.ReactNode;\n} & React.HTMLProps<HTMLUListElement>;\n\ntype ListItemProps = {\n  children: React.ReactNode;\n} & React.HTMLProps<HTMLLIElement>;\n\nexport const List: React.FunctionComponent<ListProps> = (props: ListProps) => {\n  const { horizontal = false, children, className } = props;\n  return <ul className={`${horizontal ? \"flex flex-row flex-wrap\" : \"\"} ${className || \"\"}`}>{children}</ul>;\n};\n\nexport const ListItem: React.FunctionComponent<ListItemProps> = (props: ListItemProps) => {\n  const { children, className } = props;\n  return (\n    <li className={`${className || \"\"}`}>\n      {children}\n    </li>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport { List, ListItem } from \"./List\";\nimport { faGithub, faLinkedin, IconDefinition } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype ContactListProps = {\n  showLabel?: boolean;\n  iconSize?: string;\n  labelSize?: string;\n  onDarkBG?: boolean;\n} & React.HTMLProps<HTMLDivElement>;\n\ntype ContactItem = {\n  href: string;\n  title: string;\n  icon: IconDefinition;\n  label: string;\n};\n\nconst ContactItems: ContactItem[] = [\n  {\n    href: \"mailto:alexmj212@gmail.com\",\n    title: \"Email: alexmj212@gmail.com\",\n    icon: faEnvelope,\n    label: \"alexmj212@gmail.com\",\n  },\n  {\n    href: \"https://www.linkedin.com/in/alex-johnson-077b3564/\",\n    title: \"LinkedIn: Alex Johnson\",\n    icon: faLinkedin,\n    label: \"LinkedIn\",\n  },\n  { href: \"https://www.github.com/alexmj212\", title: \"GitHub: alexmj212\", icon: faGithub, label: \"Github: alexmj212\" },\n];\n\nconst ContactList = (props: ContactListProps) => {\n  const { showLabel = false, className, iconSize = \"text-base\", labelSize = \"text-base\", onDarkBG = false } = props;\n  let colorStyle = \"text-accent1 dark:text-accent1 hover:text-white dark:hover:text-white-dark\";\n  if (onDarkBG) {\n    colorStyle = \"text-white dark:text-white-dark hover:text-white dark:hover:text-white-dark\";\n  }\n  return (\n    <List horizontal className={`flex-1 no-style items-center space-x-2 ${className || \"\"}`}>\n      {ContactItems.map((item) => (\n        <ListItem key={item.href}>\n          <a href={item.href} title={item.label} className={`${iconSize} ${colorStyle} ${className || \"\"}`}>\n            <FontAwesomeIcon icon={item.icon} />\n            {showLabel && <div className={`${labelSize} ml-2 leading-none underline`}>{item.label}</div>}\n          </a>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport ContactList from \"./ContactList\";\nimport { Link } from \"react-scroll\";\nimport { Pages } from \"../App\";\nimport { Disclosure, Transition } from \"@headlessui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst user = {\n  name: \"Alex Johnson\",\n  email: \"alexmj212@gmail.com\",\n  imageUrl: \"/img/portrait.jpg\",\n};\n\nconst Navbar = () => {\n  return (\n    <Disclosure as=\"nav\" className=\"w-full sticky top-0 z-20 md:px-4\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-screen-lg mx-auto px-4 sm:px-6 lg:px-6 bg-accent1 dark:bg-accent1-dark shadow-2xl md:rounded-md md:mt-4\">\n            <div className=\"flex flex-1 items-center justify-between h-16\">\n              <div className=\"flex items-center\">\n                <h2 className=\"flex-shrink-0 m-0\">\n                  <Link to={Pages[\"HOME\"].id} smooth className={`text-white dark:text-white-dark hover:text-white dark:hover:text-white-dark cursor-pointer`} aria-current={Pages[\"HOME\"].current ? \"page\" : undefined}>\n                    alexmj212.dev\n                  </Link>\n                </h2>\n                <div className=\"hidden md:block\">\n                  <div className=\"ml-4 lg:ml-8 flex items-baseline space-x-0\">\n                    {Object.keys(Pages)\n                      .map((key) => Pages[key])\n                      .filter((page) => !page.disabled)\n                      .map((item) => {\n                        if (item.href) {\n                          return (\n                            <a key={item.name} href={item.href} className={`text-white hover:underline hover:text-white dark:hover:text-white-dark px-3 py-2 rounded text-sm cursor-pointer`}>\n                              {item.name}\n                            </a>\n                          );\n                        }\n                        return (\n                          <Link\n                            key={item.name}\n                            to={item.id}\n                            smooth\n                            spy={true}\n                            className={`text-white hover:underline hover:text-white dark:hover:text-white-dark px-3 py-2 rounded text-sm cursor-pointer`}\n                            aria-current={item.current ? \"page\" : undefined}\n                            onClick={() => (item.current = false)}\n                          >\n                            {item.name}\n                          </Link>\n                        );\n                      })}\n                  </div>\n                </div>\n              </div>\n              <div className=\"hidden md:block\">\n                <div className=\"ml-0 flex items-center lg:ml-6\">\n                  <ContactList onDarkBG iconSize=\"text-2xl\"></ContactList>\n                </div>\n              </div>\n              <div className=\"-mr-2 flex md:hidden\">\n                {/* Mobile menu button */}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-white dark:text-white-dark hover:text-white focus:outline-none focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <div className=\"flex justify-center items-center h-6 w-6 text-2xl\" aria-hidden=\"true\">\n                      <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                  ) : (\n                    <div className=\"flex justify-center items-center h-6 w-6 text-2xl\" aria-hidden=\"true\">\n                      <FontAwesomeIcon icon={faBars} />\n                    </div>\n                  )}\n                </Disclosure.Button>\n              </div>\n            </div>\n          </div>\n\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n          >\n            <Disclosure.Panel static className=\"md:hidden bg-accent1 dark:bg-accent1-dark shadow-2xl\">\n              <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n                {Object.keys(Pages)\n                  .map((key) => Pages[key])\n                  .filter((page) => !page.disabled)\n                  .map((item) => {\n                    if (item.href) {\n                      return (\n                        <Disclosure.Button key={item.name} className={\"block w-full pb-2 px-2 text-left\"} aria-current={item.current ? \"page\" : undefined}>\n                          <a key={item.name} href={item.href} className={`flex flex-1 text-white px-3 py-2 rounded text-sm cursor-pointer`}>\n                            {item.name}\n                          </a>\n                        </Disclosure.Button>\n                      );\n                    }\n                    return (\n                      <Disclosure.Button key={item.name} className={\"block w-full pb-2 px-2 text-left\"} aria-current={item.current ? \"page\" : undefined}>\n                        <Link\n                          key={item.name}\n                          to={item.id}\n                          smooth\n                          spy={true}\n                          activeClass={`bg-accent2 text-white dark:bg-accent2-dark`}\n                          className={`flex flex-1 text-white px-3 py-2 rounded text-sm cursor-pointer`}\n                          aria-current={item.current ? \"page\" : undefined}\n                          onClick={() => (item.current = false)}\n                        >\n                          {item.name}\n                        </Link>\n                      </Disclosure.Button>\n                    );\n                  })}\n              </div>\n              <div className=\"pt-4 pb-3\">\n                <div className=\"flex items-center px-6\">\n                  <div className=\"flex-shrink-0\">\n                    <img className={`header-portrait h-16 w-16 m-0`} src={user.imageUrl} alt=\"\" />\n                  </div>\n                  <div className=\"ml-4 text-white\">\n                    <div>{user.name}</div>\n                    <div className=\"text-sm\">{user.email}</div>\n                  </div>\n                </div>\n                <div className={`px-2 py-4`}>\n                  <ContactList onDarkBG iconSize=\"text-2xl\" className={`flex justify-center space-x-8 w-full`}></ContactList>\n                </div>\n              </div>\n            </Disclosure.Panel>\n          </Transition>\n        </>\n      )}\n    </Disclosure>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\ntype SectionProps = {\n  fullScreen?: boolean;\n  children?: React.ReactNode;\n  sectionId: string;\n} & React.ComponentPropsWithRef<\"div\">;\n\nconst Section: React.FunctionComponent<SectionProps> = (props: SectionProps) => {\n  const { fullScreen, sectionId, children, className } = props;\n\n  return (\n    <div id={sectionId} className={`container w-full max-w-full z-10 ${fullScreen ? \"h-screen\" : \"py-24\"} px-4 flex justify-center items-center flex-col ${className || \"\"}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\n\ntype PanelProps = {\n  header?: string;\n  overrideWidth?: string;\n  children?: React.ReactNode;\n} & React.HTMLProps<HTMLDivElement>;\n\nconst Panel: React.FunctionComponent<PanelProps> = (props: PanelProps) => {\n  const { header, overrideWidth, children, className } = props;\n  return (\n    <div className={`w-full ${overrideWidth || \"max-w-3xl\"} ${className || \"\"}`} >\n      {header && <h1>{header}</h1>}\n      {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import React from \"react\";\n\ntype HeaderProps = {\n  children?: React.ReactNode;\n};\n\nconst Header: React.FunctionComponent<HeaderProps> = (props: HeaderProps) => {\n  const { children } = props;\n  return <div className={`w-full`}>{children}</div>;\n};\n\nexport default Header;\n","type PortfolioType = {\n  project: string;\n  images: string[];\n  date: string;\n  company: string;\n  caption: string;\n  badges: string[];\n  bullets?: string[];\n  description?: string;\n  caseStudy?: string;\n}[];\n\nconst portfolioData: PortfolioType = [\n  {\n    project: \"TwinSpires Dark Mode\",\n    images: [\n      \"img/twinspires/program/program-dark-thumb.png\",\n      \"img/twinspires/program/program-mobile.png\",\n      \"img/twinspires/program/program-dark.png\",\n      \"img/twinspires/program/program-light.png\",\n      \"img/twinspires/program/calendar-mobile.png\",\n      \"img/twinspires/program/toteboard-dark.png\",\n      \"img/twinspires/program/toteboard-light.png\",\n    ],\n    date: \"2020 - 2021\",\n    company: \"TwinSpires.com\",\n    caption: \"Dark Mode Framework for TwinSpires.com\",\n    badges: [\"Angular\", \"SASS\", \"Mobile\", \"CSS3\"],\n    bullets: [\n      \"Created a feature-rich theming system using modern CSS techniques\",\n      \"Implemented controls for users to adjust their experience\",\n      \"Integrated all components to automatically react to theme changes\",\n      \"Optimized and consolidated page elements for performant user experience\",\n    ],\n    description: `I led the initiative to add dark mode functionality to the existing TwinSpires.com website. \n      This involved a coordinated effort between our design and quality assurance teams. \n      I modified our style library to support theming and optimized the theme system. \n      We improved the overall performance of the site in addition to the user experience.\n    `,\n    caseStudy: `\n          <h2>Summary</h2>\n          <ul class=\"description\">\n              <li>Created a feature-rich theming system using modern CSS techniques</li>\n              <li>Implemented controls for users to adjust their experience</li>\n              <li>Integrated all components to automatically react to theme changes</li>\n              <li>Optimized and consolidated page elements for performant user experience</li>\n          </ul>\n          <h3>Case Study</h3>\n              <p>I proposed a Dark Mode implementation as a part of a company \"Hack-a-thon\" event.\n              The purpose of the event was to promote creative and innovative ideas that might become candidates for future features.\n              I put together a presentation on a dark mode implementation and coordinated with a few other team members.\n              I established the goals and the plan for how Dark Mode could be created and adapted to our existing framework.\n              Together with a small team, we designed and tested a proof-of-concept of dark mode and presented it to the company.\n              </p><p>\n              After the event, Dark Mode was selected and approved to become a fully-realized feature.\n              I was responsible for the implementation plan and coordinating the team to design, develop, and test this feature.\n              </p>\n          <h3>Implementation</h3>\n              <p>\n              In addition to the implementation of Dark Mode, we performed a consolidation of colors used across the site.\n              This consolidation greatly simplified the process of choosing colors while designing Dark Mode.\n              Additionally, I unified the styles for interactive elements (buttons, form fields, dropdowns, etc) across the site. This ensured\n              that not only were they Dark Mode aware, but also ensured we had consistent user experiences regardless of theme.\n              </p><p>\n              During development, I discovered that we could further optimize our theme system. In order to reduce the size of our style library,\n              I reorganized our global style sheets and SASS framework to reduce compiled styles by about 20% pre-minification.\n              By optimizing global styles, we were also able to improve overall performance of the application with reduced overhead\n              and less data transferred on initial load.\n              </p>\n          <h3>Regression Testing</h3>\n              <p>\n              After the design and implementation, I coordinated a testing plan which outlined the breadth of testing required to\n              cover regressions that might arise from the implementation. I developed a testing plan for the QA team which outlined critical areas to focus testing.\n              I worked with the QA team to resolve issues through a long testing and review process.\n              This process was enlightening as QA was able to provide me with constructive feedback about functional and design choices.\n              Through this process we were able to refine the design further.\n              </p><p>\n              In addition to testing amongst our team members, our team proposed an internal \"Test Bash\" where many volunteers\n              from various departments across the company were given access to a preview of Dark Mode.\n              They were asked to provide feedback to further improve the feature.\n              I provided structure to this process to ensure all feedback was addressed.\n              Afterward, I made the necessary adjustments to ensure that\n              all feedback and regressions were addressed and we were able to sign-off on the project.\n              </p>`,\n  },\n  {\n    project: \"TwinSpires Responsive\",\n    images: [\"img/twinspires/responsive/program-mobile-thumb.png\", \"img/twinspires/responsive/program-light.png\", \"img/twinspires/responsive/landing-light.png\", \"img/twinspires/responsive/calendar-light.png\"],\n    date: \"2018\",\n    company: \"TwinSpires.com\",\n    caption: \"Responsive Implementation of TwinSpires.com\",\n    bullets: [\n      \"Added support for dynamically sized content viewports\",\n      \"Supporting all mobile platforms including iOS, iPadOS, and Android\",\n      \"Created mobile-specific elements including navigation, modals, and lists\",\n      \"Full parity in mobile vs. desktop functionality\",\n    ],\n    badges: [\"Angular\", \"TypeScript\", \"Mobile\", \"CSS3\"],\n    description: `I worked with a talented front-end-focused team to add a responsive implementation to TwinSpires.com. \n      We added support for dynamically sized components for a range of medium and small glass devices. \n      We included support for all mobile platforms including iOS and Android. \n      We achieved the goal of full feature parity between the large and small glass views.\n    `,\n  },\n  {\n    project: \"TwinSpires Video\",\n    images: [\"img/twinspires/video/video-desktop-thumb.png\", \"img/twinspires/video/video-desktop-light.png\", \"img/twinspires/video/video-mobile-light.png\"],\n    date: \"2018 - 2020\",\n    company: \"TwinSpires.com\",\n    caption: \"Live and Replayable Video of Racing Content\",\n    bullets: [\n      \"Integrated front-end libraries from multiple video providers to create a seamless experience\",\n      \"Created site-wide video components that support a wide variety of views and formats\",\n      \"Dynamic controls for viewing and interacting with video content\",\n      \"Support for desktop and mobile video experiences\",\n    ],\n    badges: [\"Angular\", \"HTML5\", \"Mobile\", \"Multimedia\"],\n    description: `\n      One my roles was maintaining the video multimedia features on TwinSpires.com. \n      I integrated front-end libraries from multiple vendors to create a seamless video experience for desktop and mobile. \n      I helped implement dynamic video controls that enhanced the user experience.\n    `,\n  },\n];\n\nexport default portfolioData;\n","import React from \"react\";\n\ntype BadgeProps = {\n  children?: React.ReactNode;\n} & React.HTMLProps<HTMLSpanElement>;\n\nconst Badge: React.FunctionComponent<BadgeProps> = (props: BadgeProps) => {\n  const { children, className } = props;\n  return (\n    <span className={`badge ${className || \"\"}`}>\n      {children}\n    </span>\n  );\n};\n\nexport default Badge;\n","import React from \"react\";\n\nimport Panel from \"../Panel\";\n\nimport portfolioData from \"../portfoilo/PortfolioData\";\nimport { List, ListItem } from \"../List\";\nimport Badge from \"../Badge\";\n\nconst Portfolio = () => {\n  return (\n    <Panel header=\"Portfolio\">\n      <p>\n        I take great <strong>pride</strong> in the work that I do. I translate that into successful projects and initiatives. When a project is successful, it deserves to be shared. Here are just a few examples of projects of which I am most proud.\n      </p>\n      <div className={`flex flex-col my-16`}>\n        {portfolioData.map((portfolioItem) => {\n          return (\n            <div key={portfolioItem.date + portfolioItem.project} className={`flex flex-col mb-8 w-full`}>\n              <div className={`flex md:flex-row flex-col items-center w-full`}>\n                <div className={`flex flex-1 justify-center w-full max-w-xs h-full m-8 filter drop-shadow`}>{portfolioItem.images && <img src={portfolioItem.images[0]} alt={portfolioItem.project} />}</div>\n                <div className={`flex flex-1 flex-col`}>\n                  <h2>{portfolioItem.project}</h2>\n                  <p>{portfolioItem.caption}</p>\n                  <p className={`text-sm text-gray-400`}>{portfolioItem.description}</p>\n                  {/* <List className={`text-sm `}>\n                    {portfolioItem.bullets && portfolioItem.bullets.map((bullet) => <ListItem key={bullet}>{bullet}</ListItem>)}\n                  </List> */}\n                  <List horizontal className={`no-style clear-both`}>\n                    {portfolioItem.badges.map((badge) => (\n                      <ListItem key={badge}>\n                        <Badge>{badge}</Badge>\n                      </ListItem>\n                    ))}\n                  </List>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Panel>\n  );\n};\n\nexport default Portfolio;\n","import { IconDefinition } from \"@fortawesome/fontawesome-common-types\";\nimport { faAngular, faMicrosoft, faJsSquare, faNodeJs, faCss3, faHtml5, faNpm, faGithub, faReact } from \"@fortawesome/free-brands-svg-icons\";\nimport { faMobileAlt } from \"@fortawesome/free-solid-svg-icons\";\n\ntype Skills = {\n  name: string;\n  icon: IconDefinition;\n  description: string;\n}[];\n\nconst skills: Skills = [\n\n  {\n    name: \"TypeScript\",\n    icon: faMicrosoft,\n    description: \"Typing, classes, inheritance, interfaces, generics, compiler configuration\",\n  },\n  {\n    name: \"React\",\n    icon: faReact,\n    description: \"Lifecycle hooks, hoisting state, component abstraction, JSX, GraphQL\",\n  },\n  {\n    name: \"Angular (v2+)\",\n    icon: faAngular,\n    description: \"Modules, components, services, routing, NG tooling, Material\",\n  },\n  {\n    name: \"JavaScript (ES5+)\",\n    icon: faJsSquare,\n    description: \"Classes, objects, JSON, event-based programming, ECMA modules, web components\",\n  },\n  {\n    name: \"NodeJS\",\n    icon: faNodeJs,\n    description: \"Server-level Javascript development, environment configuration\",\n  },\n  {\n    name: \"Responsive Design\",\n    icon: faMobileAlt,\n    description: \"Browser and operating system testing, media queries, responsive layouts, mobile-focused design\",\n  },\n  {\n    name: \"SASS / CSS3\",\n    icon: faCss3,\n    description: \"Styling frameworks, reusability, precedence, pseudo-selectors, media queries, inheritence, flex box\",\n  },\n  {\n    name: \"HTML5\",\n    icon: faHtml5,\n    description: \"Semantic document elements, multimedia content and controls\",\n  },\n  {\n    name: \"NPM, Yarn, Grunt, Webpack\",\n    icon: faNpm,\n    description: \"Implementing toolchains for building and testing complex front-end frameworks\",\n  },\n  {\n    name: \"Git / GitHub\",\n    icon: faGithub,\n    description: \"Branching strategy, merge conflict resolution, tagging, pull requests\",\n  },\n];\n\nexport default skills;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\n\nimport Panel from \"../Panel\";\n\nimport skillsData from \"../skills/SkillsData\";\n\nconst Skills = () => {\n  return (\n    <Panel header=\"Skills\">\n      <p>\n        In my career, I've developed using many languages and frameworks. Experience in a wide variety of front-end technologies has sharpened my skills. It has also helped me maintain a <strong>strong foundation</strong> in the basics of front-end web development. I've\n        even done a little work server-side.\n      </p>\n      <div className={`grid md:grid-cols-3 grid-cols-1 gap-4 my-16`}>\n        {skillsData.map((skill) => (\n          <div key={skill.name} className={`skill-grid`}>\n            <div className={\"text-6xl flex justify-center mr-4 text-white\"}>\n              <FontAwesomeIcon icon={skill.icon} />\n            </div>\n            <div>\n              <h3 className=\"mt-0\">{skill.name}</h3>\n              <p className={`text-sm`}>{skill.description}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n      <span className={`text-sm`}>\n        <strong>Other skills:</strong> Agile, SCRUM, Jira, VSCode, macOS, Windows\n      </span>\n    </Panel>\n  );\n};\n\nexport default Skills;\n","type Project = {\n  name: string;\n  skills: string[];\n};\n\ntype Experience = {\n  date: string;\n  title: string;\n  company: string;\n  summary?: string[];\n  projects?: Project[];\n}[];\n\nconst experienceData: Experience = [\n  {\n    date: \"2021 - Now\",\n    title: \"Software Engineer\",\n    company: \"Xometry\",\n    projects: [\n      {\n        name: \"\",\n        skills: [\"React\", \"TypeScript\", \"GraphQL\"]\n      }\n    ],\n  },\n  {\n    date: \"2017 - 2021\",\n    title: \"Software Engineer\",\n    company: \"TwinSpires.com\",\n    summary: [\n      \"Work with multiple delivery teams focused on web-based products\",\n      \"Coordinate design and implementation to meet project goals\",\n      \"Organize developers and quality assurance team members for site-wide projects\",\n      \"Support legacy products and administrative applications\",\n    ],\n    projects: [\n      {\n        name: \"\",\n        skills: [\"Angular\", \"AngularJS\", \"TypeScript\", \"SASS\", \"CSS3\", \"HTML5\", \"Mobile\", \"Material\", \"Multimedia\", \"NodeJS\", \"NPM/Webpack\", \"AWS Lambda\", \"AWS DynamoDB\"],\n      },\n      // {\n      //   name: \"Dark Mode Theme for TwinsSpires.com\",\n      //   skills: [\"Angular\", \"SASS\", \"CSS3\", \"Mobile\"],\n      // },\n      // {\n      //   name: \"Environment upgrade and migration to recent Angular versions\",\n      //   skills: [\"Angular\", \"TypeScript\", \"NodeJS\", \"NPM / WebPack\"],\n      // },\n      // {\n      //   name: \"Integrated Wagering Interface\",\n      //   skills: [\"Angular\", \"TypeScript\", \"Mobile\", \"CSS3\"],\n      // },\n      // {\n      //   name: \"Site menu system and administrative tools for management of site navigation\",\n      //   skills: [\"AngularJS\", \"Angular\", \"Material\"],\n      // },\n      // {\n      //   name: \"Historical Horse Racing Results\",\n      //   skills: [\"AWS Lambda\", \"AWS DynamoDB\", \"NodeJS\"],\n      // },\n      // {\n      //   name: \"TwinSpires.com Video features\",\n      //   skills: [\"Angular\", \"HTML5\", \"Mobile\", \"Multimedia\"],\n      // },\n      // {\n      //   name: \"Responsive Implementation of TwinSpires.com\",\n      //   skills: [\"Angular\", \"TypeScript\", \"Mobile\", \"CSS3\"],\n      // },\n    ],\n  },\n  {\n    date: \"2014 - 2017\",\n    title: \"Software Engineer\",\n    company: \"The Jockey Club Technology Services\",\n    summary: [\n      \"Created and deployed user interfaces and server infrastructure\",\n      \"Lead the management of remote resources to achieve project goals\",\n      \"Communicated proactively among team members and clients\",\n      \"Supported and maintained existing applications and infrastructure\",\n    ],\n    projects: [\n      {\n        name: \"\",\n        skills: [\"AngularJS\", \"Grails\", \"Bootstrap\", \"MS SQL Server\", \"Drupal\", \"Responsive Design\"],\n      },\n      // {\n      //   name: \"Betting Transaction Reporting and Mathematical Modeling\",\n      //   skills: [\"AngularJS\", \"Grails\", \"Bootstrap\"],\n      // },\n      // {\n      //   name: \"Organizational System for Data Accountability\",\n      //   skills: [\"MS SQL Server\", \"Grails\"],\n      // },\n      // {\n      //   name: \"Extraction, Transformation, Loading of Transactional Betting Data\",\n      //   skills: [\"MS SQL Server\", \"Grails\"],\n      // },\n      // {\n      //   name: \"Mathematical Modeling for International Rankings of Thoroughbreds\",\n      //   skills: [\"PHP\", \"Bootstrap\"],\n      // },\n      // {\n      //   name: \"Education and Personnel Management System for Stewardship Accreditation\",\n      //   skills: [\"Bootstrap\", \"Mobile\", \"Drupal\"],\n      // },\n      // {\n      //   name: \"Education and Course System for Attaining Training Certifications\",\n      //   skills: [\"Bootstrap\", \"Mobile\", \"Drupal\"],\n      // },\n      // {\n      //   name: \"Outreach and Commentary Blog on Worldwide Thoroughbred Topics\",\n      //   skills: [\"CSS\", \"Mobile\", \"Drupal\"],\n      // },\n    ],\n  },\n  {\n    date: \"2013 - 2014\",\n    title: \"System Administrator\",\n    company: \"iEntry, Inc.\",\n    summary: [\"Developed critical data and server infrastructure software\", \"Implemented marketing tools to identify subscriber audience\"],\n  },\n  {\n    date: \"2011 - 2013\",\n    title: \"Technical Desktop Support\",\n    company: \"College of Arts and Sciences - University of Kentucky\",\n  },\n];\n\nexport default experienceData;\n","import React from \"react\";\n\nimport Panel from \"../Panel\";\nimport { List, ListItem } from \"../List\";\nimport Badge from \"../Badge\";\n\nimport experienceData from \"../experience/ExperienceData\";\n\nconst Experience = () => {\n  return (\n    <Panel header=\"Experience\">\n      <p>\n        I've worked on teams of all shapes and sizes. My strengths are <strong>communication</strong> and <strong>team coordination</strong>. I've lead projects and initiatives across multiple teams. I accomplish this by using my strengths to translate project requirements into successful solutions.\n      </p>\n      {experienceData.map((experienceItem) => {\n        return (\n          <div key={experienceItem.date + experienceItem.company} className={`flex md:flex-row flex-col my-16`}>\n            <div className={`date-column mt-1 mr-8 whitespace-nowrap`}>\n              <p className={`text-accent2 my-1 font-semibold`}>{experienceItem.date}</p>\n            </div>\n            <div className={``}>\n              <h2 className={`my-2`}>{experienceItem.title}</h2>\n              <h3 className={`my-2`}>{experienceItem.company}</h3>\n              <List>{experienceItem.summary && experienceItem.summary.map((bullet) => <ListItem key={bullet}>{bullet}</ListItem>)}</List>\n              {experienceItem.projects &&\n                experienceItem.projects.map((project) => (\n                  <div key={project.name} className={`mb-4`}>\n                    <List horizontal className={`no-style`}>\n                      {project.skills.map((skill) => (\n                        <ListItem key={skill}>\n                          <Badge>{skill}</Badge>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </div>\n                ))}\n            </div>\n          </div>\n        );\n      })}\n    </Panel>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\n\nimport Navbar from \"./components/Navbar\";\nimport Section from \"./components/Section\";\nimport Panel from \"./components/Panel\";\nimport Header from \"./components/Header\";\nimport Portfolio from \"./components/portfoilo/Portfolio\";\nimport Skills from \"./components/skills/Skills\";\nimport Experience from \"./components/experience/Experience\";\nimport { Link } from \"react-scroll\";\nimport ContactList from \"./components/ContactList\";\n\nexport type PageDefinition = {\n  [key: string]: {\n    id: string;\n    name: string;\n    href?: string;\n    current?: boolean;\n    disabled?: boolean;\n  };\n};\n\nexport const Pages: PageDefinition = {\n  HOME: {\n    id: \"home\",\n    name: \"Home\",\n    disabled: true,\n  },\n  ABOUT: {\n    id: \"about\",\n    name: \"About\",\n  },\n  PORTFOLIO: {\n    id: \"portfolio\",\n    name: \"Portfolio\",\n  },\n  SKILLS: {\n    id: \"skills\",\n    name: \"Skills\",\n  },\n  EDUCATION: {\n    id: \"education\",\n    name: \"Education\",\n    disabled: true,\n  },\n  EXPERIENCE: {\n    id: \"experience\",\n    name: \"Experience\",\n  },\n  BLOG: {\n    id: \"blog\",\n    name: \"Blog\",\n    href: \"/blog\",\n  },\n  FOOTER: {\n    id: \"footer\",\n    name: \"Footer\",\n    disabled: true,\n  },\n};\n\nconst App = () => {\n  return (\n    <div className={`app-container`}>\n      <Navbar></Navbar>\n      <Section fullScreen sectionId={Pages.HOME.id} className={`-mt-8`}>\n        <Panel overrideWidth={`max-w-4xl`}>\n          <Header>\n            <div className={`flex md:flex-row flex-col`}>\n              <div className={`container flex justify-center m-0 mr-8 filter drop-shadow`}>\n                <img className={`header-portrait`} alt=\"Alex Johnson portrait\" src=\"/img/portrait.jpg\" />\n                <div className={`md:block hidden text-8xl hand-wave absolute`}>👋</div>\n              </div>\n              <div>\n                <h1 className={`md:text-7xl text-4xl mb-8`}>Hey, my name is Alex</h1>\n                <p className={`mb-8`}>\n                  I'm a <strong className={`whitespace-nowrap`}>front-end software engineer</strong> based in <i className={`whitespace-nowrap font-light`}>Lexington, KY</i> and I specialize in building (and sometimes designing) experiences for the\n                  web.\n                </p>\n                <Link to={Pages.PORTFOLIO.id} smooth offset={2} className={`hero-button`}>\n                  Check out my work\n                </Link>\n              </div>\n            </div>\n          </Header>\n        </Panel>\n      </Section>\n      <Section sectionId={Pages.ABOUT.id} className={`text-white bg-accent1 dark:bg-accent1-dark dark:text-white-dark`}>\n        <Panel header=\"About Me\">\n          <p>\n            For 7 years, I have delivered great user experiences using a wide variety of technologies. I have coordinated teams to deliver feature-rich projects from idea to production. I focus on design, usability, and user experience to create\n            products for all audiences using modern concepts and practices.\n          </p>\n          <p>\n            When I was young, I learned how to build basic web pages. This led to learning graphic design and creating images to use in layouts on my personal web pages. Even before finishing high school, I quickly decided that I wanted to pursue a\n            career in front-end web development.\n          </p>\n          <p>\n            Not long after, I graduated from the <strong>University of Kentucky</strong> in 2013 with a <i>B.S. in Computer Science</i>. While I was there, I studied discrete mathmatics, web development, and compilers. I also picked up some helpful\n            skills including regular expressions, databases, and object-oriented programming.\n          </p>\n          <div className=\"flex justify-center items-center mt-8 mx-auto w-full max-w-screen-sm\">\n            <ContactList showLabel iconSize=\"text-2xl\" labelSize=\"text-lg\" onDarkBG className={`flex justify-evenly`}></ContactList>\n          </div>\n        </Panel>\n      </Section>\n      <Section sectionId={Pages.PORTFOLIO.id}>\n        <Portfolio></Portfolio>\n      </Section>\n      <Section sectionId={Pages.SKILLS.id} className={`text-white bg-accent1 dark:bg-accent1-dark dark:text-white-dark`}>\n        <Skills></Skills>\n      </Section>\n      <Section sectionId={Pages.EXPERIENCE.id}>\n        <Experience></Experience>\n      </Section>\n      <Section sectionId={Pages.FOOTER.id} className={`text-white bg-accent1 dark:bg-accent1-dark dark:text-white-dark text-center`}>\n        <Panel>\n          <h1>Alex Johnson</h1>\n          <ContactList iconSize=\"text-4xl\" onDarkBG className={`flex justify-center w-full max-width-1/2`}></ContactList>\n        </Panel>\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}